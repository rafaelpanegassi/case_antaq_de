services:
  webserver:
    volumes:
      - ./dags:/opt/airflow/dags
      - ../jobs:/opt/airflow/jobs
    environment:
      - AIRFLOW__CORE__DAG_DIR_LIST_INTERVAL=10  # Intervalo para verificação dos DAGs

  scheduler:
    volumes:
      - ./dags:/opt/airflow/dags
      - ../jobs:/opt/airflow/jobs
    environment:
      - AIRFLOW__CORE__DAG_DIR_LIST_INTERVAL=10  # Intervalo para verificação dos DAGs

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  # Porta da API do MinIO
      - "9001:9001"  # Porta do console do MinIO
    environment:
      - MINIO_ROOT_USER=minio_admin
      - MINIO_ROOT_PASSWORD=minio_password
    command: server /data --console-address ":9001"
    volumes:
      - ./minio_data:/data   # Persistência dos dados do MinIO no host
    restart: unless-stopped
    networks:
      - airflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootmysql
      - MYSQL_DATABASE=antaq
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    volumes:
      - ./mysql_data:/var/lib/mysql  # Persistência dos dados do MySQL no host
    restart: unless-stopped
    networks:
      - airflow

  s3_minio_buckets:
    image: minio/mc:latest  # Cliente MinIO para gerenciamento
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minio_admin minio_password;
      /usr/bin/mc rb --force minio/raw || true;
      /usr/bin/mc mb minio/raw;
      /usr/bin/mc rb --force minio/bronze || true;
      /usr/bin/mc mb minio/bronze;
      /usr/bin/mc rb --force minio/silver || true;
      /usr/bin/mc mb minio/silver;
      /usr/bin/mc rb --force minio/gold || true;
      /usr/bin/mc mb minio/gold;
      exit 0;
      "
    networks:
      - airflow

networks:
  airflow:
    driver: bridge
